from sqlalchemy import and_, func, join, select
from sqlalchemy_utils.view import create_view

from vigorish.database import Assoc_Player_Team, Base, BatStats
from vigorish.models.views.bat_stats_col_expressions import avg, bb_rate, iso, k_rate, obp, ops, slg


class Player_BatStats_All_View(Base):
    __table__ = create_view(
        name="player_batstats_all",
        selectable=select(
            [
                BatStats.player_id.label("id"),
                BatStats.player_id_mlb.label("mlb_id"),
                BatStats.player_id_bbref.label("bbref_id"),
                func.count(BatStats.id).label("total_games"),
                avg,
                obp,
                slg,
                ops,
                iso,
                bb_rate,
                k_rate,
                func.sum(BatStats.plate_appearances).label("plate_appearances"),
                func.sum(BatStats.at_bats).label("at_bats"),
                func.sum(BatStats.hits).label("hits"),
                func.sum(BatStats.runs_scored).label("runs_scored"),
                func.sum(BatStats.rbis).label("rbis"),
                func.sum(BatStats.bases_on_balls).label("bases_on_balls"),
                func.sum(BatStats.strikeouts).label("strikeouts"),
                func.sum(BatStats.doubles).label("doubles"),
                func.sum(BatStats.triples).label("triples"),
                func.sum(BatStats.homeruns).label("homeruns"),
                func.sum(BatStats.stolen_bases).label("stolen_bases"),
                func.sum(BatStats.caught_stealing).label("caught_stealing"),
                func.sum(BatStats.hit_by_pitch).label("hit_by_pitch"),
                func.sum(BatStats.intentional_bb).label("intentional_bb"),
                func.sum(BatStats.gdp).label("gdp"),
                func.sum(BatStats.sac_fly).label("sac_fly"),
                func.sum(BatStats.sac_hit).label("sac_hit"),
                func.sum(BatStats.total_pitches).label("total_pitches"),
                func.sum(BatStats.total_strikes).label("total_strikes"),
                func.sum(BatStats.wpa_bat).label("wpa_bat"),
                func.sum(BatStats.wpa_bat_pos).label("wpa_bat_pos"),
                func.sum(BatStats.wpa_bat_neg).label("wpa_bat_neg"),
                func.sum(BatStats.re24_bat).label("re24_bat"),
            ]
        )
        .select_from(BatStats)
        .group_by(BatStats.player_id)
        .order_by(BatStats.player_id_mlb),
        metadata=Base.metadata,
        cascade_on_drop=False,
    )


class Player_BatStats_By_Year_View(Base):
    __table__ = create_view(
        name="player_batstats_by_year",
        selectable=select(
            [
                BatStats.player_id.label("id"),
                BatStats.player_id_mlb.label("mlb_id"),
                BatStats.player_id_bbref.label("bbref_id"),
                BatStats.season_id.label("season_id"),
                func.count(BatStats.id).label("total_games"),
                avg,
                obp,
                slg,
                ops,
                iso,
                bb_rate,
                k_rate,
                func.sum(BatStats.plate_appearances).label("plate_appearances"),
                func.sum(BatStats.at_bats).label("at_bats"),
                func.sum(BatStats.hits).label("hits"),
                func.sum(BatStats.runs_scored).label("runs_scored"),
                func.sum(BatStats.rbis).label("rbis"),
                func.sum(BatStats.bases_on_balls).label("bases_on_balls"),
                func.sum(BatStats.strikeouts).label("strikeouts"),
                func.sum(BatStats.doubles).label("doubles"),
                func.sum(BatStats.triples).label("triples"),
                func.sum(BatStats.homeruns).label("homeruns"),
                func.sum(BatStats.stolen_bases).label("stolen_bases"),
                func.sum(BatStats.caught_stealing).label("caught_stealing"),
                func.sum(BatStats.hit_by_pitch).label("hit_by_pitch"),
                func.sum(BatStats.intentional_bb).label("intentional_bb"),
                func.sum(BatStats.gdp).label("gdp"),
                func.sum(BatStats.sac_fly).label("sac_fly"),
                func.sum(BatStats.sac_hit).label("sac_hit"),
                func.sum(BatStats.total_pitches).label("total_pitches"),
                func.sum(BatStats.total_strikes).label("total_strikes"),
                func.sum(BatStats.wpa_bat).label("wpa_bat"),
                func.sum(BatStats.wpa_bat_pos).label("wpa_bat_pos"),
                func.sum(BatStats.wpa_bat_neg).label("wpa_bat_neg"),
                func.sum(BatStats.re24_bat).label("re24_bat"),
            ]
        )
        .select_from(BatStats)
        .group_by(BatStats.season_id)
        .group_by(BatStats.player_id)
        .order_by(BatStats.player_id_mlb),
        metadata=Base.metadata,
        cascade_on_drop=False,
    )


class Player_BatStats_By_Team_View(Base):
    __table__ = create_view(
        name="player_batstats_by_team",
        selectable=select(
            [
                BatStats.player_id.label("id"),
                BatStats.player_id_mlb.label("mlb_id"),
                BatStats.player_id_bbref.label("bbref_id"),
                BatStats.player_team_id_bbref.label("player_team_id_bbref"),
                func.count(BatStats.id).label("total_games"),
                avg,
                obp,
                slg,
                ops,
                iso,
                bb_rate,
                k_rate,
                func.sum(BatStats.plate_appearances).label("plate_appearances"),
                func.sum(BatStats.at_bats).label("at_bats"),
                func.sum(BatStats.hits).label("hits"),
                func.sum(BatStats.runs_scored).label("runs_scored"),
                func.sum(BatStats.rbis).label("rbis"),
                func.sum(BatStats.bases_on_balls).label("bases_on_balls"),
                func.sum(BatStats.strikeouts).label("strikeouts"),
                func.sum(BatStats.doubles).label("doubles"),
                func.sum(BatStats.triples).label("triples"),
                func.sum(BatStats.homeruns).label("homeruns"),
                func.sum(BatStats.stolen_bases).label("stolen_bases"),
                func.sum(BatStats.caught_stealing).label("caught_stealing"),
                func.sum(BatStats.hit_by_pitch).label("hit_by_pitch"),
                func.sum(BatStats.intentional_bb).label("intentional_bb"),
                func.sum(BatStats.gdp).label("gdp"),
                func.sum(BatStats.sac_fly).label("sac_fly"),
                func.sum(BatStats.sac_hit).label("sac_hit"),
                func.sum(BatStats.total_pitches).label("total_pitches"),
                func.sum(BatStats.total_strikes).label("total_strikes"),
                func.sum(BatStats.wpa_bat).label("wpa_bat"),
                func.sum(BatStats.wpa_bat_pos).label("wpa_bat_pos"),
                func.sum(BatStats.wpa_bat_neg).label("wpa_bat_neg"),
                func.sum(BatStats.re24_bat).label("re24_bat"),
            ]
        )
        .select_from(BatStats)
        .group_by(BatStats.player_id)
        .group_by(BatStats.player_team_id_bbref)
        .order_by(BatStats.player_id_mlb),
        metadata=Base.metadata,
        cascade_on_drop=False,
    )


class Player_BatStats_By_Team_Year_View(Base):
    __table__ = create_view(
        name="player_batstats_by_team_year",
        selectable=select(
            [
                BatStats.player_id.label("id"),
                BatStats.player_id_mlb.label("mlb_id"),
                BatStats.player_id_bbref.label("bbref_id"),
                BatStats.season_id.label("season_id"),
                BatStats.player_team_id.label("player_team_id"),
                BatStats.player_team_id_bbref.label("player_team_id_bbref"),
                Assoc_Player_Team.stint_number.label("stint_number"),
                func.count(BatStats.id).label("total_games"),
                avg,
                obp,
                slg,
                ops,
                iso,
                bb_rate,
                k_rate,
                func.sum(BatStats.plate_appearances).label("plate_appearances"),
                func.sum(BatStats.at_bats).label("at_bats"),
                func.sum(BatStats.hits).label("hits"),
                func.sum(BatStats.runs_scored).label("runs_scored"),
                func.sum(BatStats.rbis).label("rbis"),
                func.sum(BatStats.bases_on_balls).label("bases_on_balls"),
                func.sum(BatStats.strikeouts).label("strikeouts"),
                func.sum(BatStats.doubles).label("doubles"),
                func.sum(BatStats.triples).label("triples"),
                func.sum(BatStats.homeruns).label("homeruns"),
                func.sum(BatStats.stolen_bases).label("stolen_bases"),
                func.sum(BatStats.caught_stealing).label("caught_stealing"),
                func.sum(BatStats.hit_by_pitch).label("hit_by_pitch"),
                func.sum(BatStats.intentional_bb).label("intentional_bb"),
                func.sum(BatStats.gdp).label("gdp"),
                func.sum(BatStats.sac_fly).label("sac_fly"),
                func.sum(BatStats.sac_hit).label("sac_hit"),
                func.sum(BatStats.total_pitches).label("total_pitches"),
                func.sum(BatStats.total_strikes).label("total_strikes"),
                func.sum(BatStats.wpa_bat).label("wpa_bat"),
                func.sum(BatStats.wpa_bat_pos).label("wpa_bat_pos"),
                func.sum(BatStats.wpa_bat_neg).label("wpa_bat_neg"),
                func.sum(BatStats.re24_bat).label("re24_bat"),
            ]
        )
        .select_from(
            join(
                BatStats,
                Assoc_Player_Team,
                and_(
                    BatStats.player_id == Assoc_Player_Team.db_player_id,
                    BatStats.player_team_id == Assoc_Player_Team.db_team_id,
                ),
            )
        )
        .group_by(BatStats.season_id)
        .group_by(BatStats.player_id)
        .group_by(BatStats.player_team_id)
        .order_by(BatStats.player_id_mlb)
        .order_by(BatStats.season_id)
        .order_by(Assoc_Player_Team.stint_number),
        metadata=Base.metadata,
        cascade_on_drop=False,
    )


class Player_BatStats_By_Opp_Team_View(Base):
    __table__ = create_view(
        name="player_batstats_by_opp_team",
        selectable=select(
            [
                BatStats.player_id.label("id"),
                BatStats.player_id_mlb.label("mlb_id"),
                BatStats.player_id_bbref.label("bbref_id"),
                BatStats.opponent_team_id_bbref.label("opponent_team_id_bbref"),
                func.count(BatStats.id).label("total_games"),
                avg,
                obp,
                slg,
                ops,
                iso,
                bb_rate,
                k_rate,
                func.sum(BatStats.plate_appearances).label("plate_appearances"),
                func.sum(BatStats.at_bats).label("at_bats"),
                func.sum(BatStats.hits).label("hits"),
                func.sum(BatStats.runs_scored).label("runs_scored"),
                func.sum(BatStats.rbis).label("rbis"),
                func.sum(BatStats.bases_on_balls).label("bases_on_balls"),
                func.sum(BatStats.strikeouts).label("strikeouts"),
                func.sum(BatStats.doubles).label("doubles"),
                func.sum(BatStats.triples).label("triples"),
                func.sum(BatStats.homeruns).label("homeruns"),
                func.sum(BatStats.stolen_bases).label("stolen_bases"),
                func.sum(BatStats.caught_stealing).label("caught_stealing"),
                func.sum(BatStats.hit_by_pitch).label("hit_by_pitch"),
                func.sum(BatStats.intentional_bb).label("intentional_bb"),
                func.sum(BatStats.gdp).label("gdp"),
                func.sum(BatStats.sac_fly).label("sac_fly"),
                func.sum(BatStats.sac_hit).label("sac_hit"),
                func.sum(BatStats.total_pitches).label("total_pitches"),
                func.sum(BatStats.total_strikes).label("total_strikes"),
                func.sum(BatStats.wpa_bat).label("wpa_bat"),
                func.sum(BatStats.wpa_bat_pos).label("wpa_bat_pos"),
                func.sum(BatStats.wpa_bat_neg).label("wpa_bat_neg"),
                func.sum(BatStats.re24_bat).label("re24_bat"),
            ]
        )
        .select_from(BatStats)
        .group_by(BatStats.player_id)
        .group_by(BatStats.opponent_team_id_bbref)
        .order_by(BatStats.player_id_mlb),
        metadata=Base.metadata,
        cascade_on_drop=False,
    )


class Player_BatStats_By_Opp_Team_Year_View(Base):
    __table__ = create_view(
        name="player_batstats_by_opp_team_year",
        selectable=select(
            [
                BatStats.player_id.label("id"),
                BatStats.player_id_mlb.label("mlb_id"),
                BatStats.player_id_bbref.label("bbref_id"),
                BatStats.season_id.label("season_id"),
                BatStats.opponent_team_id.label("opponent_team_id"),
                BatStats.opponent_team_id_bbref.label("opponent_team_id_bbref"),
                func.count(BatStats.id).label("total_games"),
                avg,
                obp,
                slg,
                ops,
                iso,
                bb_rate,
                k_rate,
                func.sum(BatStats.plate_appearances).label("plate_appearances"),
                func.sum(BatStats.at_bats).label("at_bats"),
                func.sum(BatStats.hits).label("hits"),
                func.sum(BatStats.runs_scored).label("runs_scored"),
                func.sum(BatStats.rbis).label("rbis"),
                func.sum(BatStats.bases_on_balls).label("bases_on_balls"),
                func.sum(BatStats.strikeouts).label("strikeouts"),
                func.sum(BatStats.doubles).label("doubles"),
                func.sum(BatStats.triples).label("triples"),
                func.sum(BatStats.homeruns).label("homeruns"),
                func.sum(BatStats.stolen_bases).label("stolen_bases"),
                func.sum(BatStats.caught_stealing).label("caught_stealing"),
                func.sum(BatStats.hit_by_pitch).label("hit_by_pitch"),
                func.sum(BatStats.intentional_bb).label("intentional_bb"),
                func.sum(BatStats.gdp).label("gdp"),
                func.sum(BatStats.sac_fly).label("sac_fly"),
                func.sum(BatStats.sac_hit).label("sac_hit"),
                func.sum(BatStats.total_pitches).label("total_pitches"),
                func.sum(BatStats.total_strikes).label("total_strikes"),
                func.sum(BatStats.wpa_bat).label("wpa_bat"),
                func.sum(BatStats.wpa_bat_pos).label("wpa_bat_pos"),
                func.sum(BatStats.wpa_bat_neg).label("wpa_bat_neg"),
                func.sum(BatStats.re24_bat).label("re24_bat"),
            ]
        )
        .select_from(BatStats)
        .group_by(BatStats.season_id)
        .group_by(BatStats.player_id)
        .group_by(BatStats.opponent_team_id)
        .order_by(BatStats.player_id_mlb),
        metadata=Base.metadata,
        cascade_on_drop=False,
    )
